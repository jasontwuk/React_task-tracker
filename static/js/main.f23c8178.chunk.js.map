{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTaskForm.js","components/EditTaskForm.js","components/useLocalStorage.js","App.js","index.js"],"names":["Button","text","onClick","className","defaultProps","Header","onAdd","Task","task","deleteTask","editTask","color","name","id","time","Tasks","tasks","map","AddTaskForm","saveTask","useState","setName","Date","startDate","setStartDate","setColor","successMsg","setSuccessMsg","useEffect","document","getElementById","focus","onSubmit","e","preventDefault","value","alert","type","placeholder","onChange","target","selected","date","showTimeSelect","timeFormat","timeIntervals","timeCaption","dateFormat","checked","EditTaskForm","onEdit","saveEditTask","clickedTask","useLocalStorage","key","initialValue","JSON","parse","localStorage","getItem","Function","getSavedValue","setValue","setItem","stringify","App","showAddTaskForm","setShowAddTaskForm","showEditTaskForm","setShowEditTaskForm","setTasks","setClickedTask","Math","floor","random","newTasks","editTaskIndex","findIndex","t","length","filter","thisTask","find","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f23c8178.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\n\nconst Button = ({ text, onClick }) => {\n  return (\n    <button className=\"btn\" onClick={onClick}>\n      {text}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  text: \"Button\",\n};\n\nButton.propTypes = {\n  text: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import Button from \"./Button\";\n\nconst Header = ({ onAdd }) => {\n  return (\n    <header className=\"header\">\n      <h1>Task Tracker</h1>\n      <Button text=\"Add\" onClick={onAdd} />\n    </header>\n  );\n};\n\nexport default Header;\n","import { FaTimes } from \"react-icons/fa\";\nimport { HiPencilAlt } from \"react-icons/hi\";\n\nconst Task = ({ task, deleteTask, editTask }) => {\n  return (\n    <div className={`task ` + task.color}>\n      <h3>\n        {task.name}\n        <FaTimes onClick={() => deleteTask(task.id)} />\n      </h3>\n      <span>\n        {task.time}\n        <HiPencilAlt onClick={() => editTask(task.id)} />\n      </span>\n    </div>\n  );\n};\n\nexport default Task;\n","import Task from \"./Task\";\n\nconst Tasks = ({ tasks, deleteTask, editTask }) => {\n  return (\n    <>\n      {tasks.map((task) => (\n        <Task\n          key={task.id}\n          task={task}\n          deleteTask={deleteTask}\n          editTask={editTask}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default Tasks;\n","import { useEffect, useState } from \"react\";\nimport { FaTimes } from \"react-icons/fa\";\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst AddTaskForm = ({ onAdd, saveTask }) => {\n  const [name, setName] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [color, setColor] = useState(\"blue\");\n\n  const [successMsg, setSuccessMsg] = useState(false);\n\n  useEffect(() => {\n    // !!! focus on #input-task when component loaded\n    const inputTask = document.getElementById(\"input-task\");\n\n    inputTask.focus();\n  }, []);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    // *** check if the task is empty\n    if (!name) {\n      alert(\"Please add a task.\");\n      return;\n    }\n\n    // *** get #date-picker's input value, then set it to \"time\" property\n    const datePicker = document.getElementById(\"date-picker\");\n    const time = datePicker.value;\n\n    // *** call saveTask\n    saveTask({ name, time, color });\n\n    // *** clear the form\n    setName(\"\");\n    setColor(\"blue\");\n\n    // *** show success message\n    setSuccessMsg(true);\n  };\n\n  return (\n    <div className=\"form-container\">\n      <FaTimes onClick={onAdd} />\n\n      <form onSubmit={onSubmit}>\n        <div className=\"form-input\">\n          <label>Task</label>\n          <input\n            type=\"text\"\n            placeholder=\"Add Task\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            id=\"input-task\"\n          />\n        </div>\n\n        <div className=\"form-input\">\n          <label>Time</label>\n          <DatePicker\n            selected={startDate}\n            onChange={(date) => setStartDate(date)}\n            showTimeSelect\n            timeFormat=\"HH:mm\"\n            timeIntervals={15}\n            timeCaption=\"time\"\n            dateFormat=\"d MMM yyyy h:mm aa\"\n            id=\"date-picker\"\n          />\n        </div>\n\n        <div className=\"form-input\">\n          <label>Colour</label>\n          <div className=\"radio-container\">\n            <input\n              type=\"radio\"\n              value=\"blue\"\n              name=\"colour\"\n              checked={color === \"blue\"}\n              onChange={() => setColor(\"blue\")}\n            />\n            <span className=\"radio-blue\">Blue</span>\n            <input\n              type=\"radio\"\n              value=\"pink\"\n              name=\"colour\"\n              checked={color === \"pink\"}\n              onChange={() => setColor(\"pink\")}\n            />\n            <span className=\"radio-pink\">Pink</span>\n            <input\n              type=\"radio\"\n              value=\"yellow\"\n              name=\"colour\"\n              checked={color === \"yellow\"}\n              onChange={() => setColor(\"yellow\")}\n            />\n            <span className=\"radio-yellow\">Yellow</span>\n            <input\n              type=\"radio\"\n              value=\"green\"\n              name=\"colour\"\n              checked={color === \"green\"}\n              onChange={() => setColor(\"green\")}\n            />\n            <span className=\"radio-green\">Green</span>\n            <input\n              type=\"radio\"\n              value=\"purple\"\n              name=\"colour\"\n              checked={color === \"purple\"}\n              onChange={() => setColor(\"purple\")}\n            />\n            <span className=\"radio-purple\">Purple</span>\n          </div>\n        </div>\n\n        <input type=\"submit\" value=\"Save Task\" />\n\n        {successMsg && (\n          <p>\n            <em>Task added.</em>\n            <br />\n            Please add another one or close this window to go back to your task\n            list.\n          </p>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default AddTaskForm;\n","import { useEffect, useState } from \"react\";\nimport { FaTimes } from \"react-icons/fa\";\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst EditTaskForm = ({ onEdit, saveEditTask, clickedTask }) => {\n  const id = clickedTask.id;\n  const [name, setName] = useState(clickedTask.name);\n  const [startDate, setStartDate] = useState(new Date(clickedTask.time));\n  const [color, setColor] = useState(clickedTask.color);\n\n  useEffect(() => {\n    // !!! focus on #input-task when component loaded\n    const inputTask = document.getElementById(\"input-task\");\n\n    inputTask.focus();\n  }, []);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    // *** check if the task is empty\n    if (!name) {\n      alert(\"Please add a task.\");\n      return;\n    }\n\n    // *** get #date-picker's input value, then set it to \"time\" property\n    const datePicker = document.getElementById(\"date-picker\");\n    const time = datePicker.value;\n\n    // *** call saveEditTask\n    saveEditTask({ id, name, time, color });\n  };\n\n  return (\n    <div className=\"form-container\">\n      <FaTimes onClick={onEdit} />\n\n      <form onSubmit={onSubmit}>\n        <div className=\"form-input\">\n          <label>Task</label>\n          <input\n            type=\"text\"\n            placeholder=\"Add Task\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            id=\"input-task\"\n          />\n        </div>\n\n        <div className=\"form-input\">\n          <label>Time</label>\n          <DatePicker\n            selected={startDate}\n            onChange={(date) => setStartDate(date)}\n            showTimeSelect\n            timeFormat=\"HH:mm\"\n            timeIntervals={15}\n            timeCaption=\"time\"\n            dateFormat=\"d MMM yyyy h:mm aa\"\n            id=\"date-picker\"\n          />\n        </div>\n\n        <div className=\"form-input\">\n          <label>Colour</label>\n          <div className=\"radio-container\">\n            <input\n              type=\"radio\"\n              value=\"blue\"\n              name=\"colour\"\n              checked={color === \"blue\"}\n              onChange={() => setColor(\"blue\")}\n            />\n            <span className=\"radio-blue\">Blue</span>\n            <input\n              type=\"radio\"\n              value=\"pink\"\n              name=\"colour\"\n              checked={color === \"pink\"}\n              onChange={() => setColor(\"pink\")}\n            />\n            <span className=\"radio-pink\">Pink</span>\n            <input\n              type=\"radio\"\n              value=\"yellow\"\n              name=\"colour\"\n              checked={color === \"yellow\"}\n              onChange={() => setColor(\"yellow\")}\n            />\n            <span className=\"radio-yellow\">Yellow</span>\n            <input\n              type=\"radio\"\n              value=\"green\"\n              name=\"colour\"\n              checked={color === \"green\"}\n              onChange={() => setColor(\"green\")}\n            />\n            <span className=\"radio-green\">Green</span>\n            <input\n              type=\"radio\"\n              value=\"purple\"\n              name=\"colour\"\n              checked={color === \"purple\"}\n              onChange={() => setColor(\"purple\")}\n            />\n            <span className=\"radio-purple\">Purple</span>\n          </div>\n        </div>\n\n        <input type=\"submit\" value=\"Save Edit Task\" />\n      </form>\n    </div>\n  );\n};\n\nexport default EditTaskForm;\n","import { useState, useEffect } from \"react\";\n\nfunction getSavedValue(key, initialValue) {\n  const savedValue = JSON.parse(localStorage.getItem(key));\n\n  // *** if savedValue is not empty, return savedValue\n  if (savedValue) {\n    return savedValue;\n  }\n\n  // *** if savedValue is a function, then call that fucntion\n  if (initialValue instanceof Function) {\n    return initialValue();\n  }\n\n  // *** if not the above situations...\n  return initialValue;\n}\n\nconst useLocalStorage = (key, initialValue) => {\n  const [value, setValue] = useState(() => {\n    return getSavedValue(key, initialValue);\n  });\n\n  // *** when \"value\" is changed, use useEffect to store \"value\" to localStorage\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [value]);\n\n  return [value, setValue];\n};\n\nexport default useLocalStorage;\n","import Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport \"./App.scss\";\nimport { useState } from \"react\";\nimport AddTaskForm from \"./components/AddTaskForm\";\nimport EditTaskForm from \"./components/EditTaskForm\";\nimport useLocalStorage from \"./components/useLocalStorage\";\n\nfunction App() {\n  // [\n  //   {\n  //     id: 1,\n  //     name: \"Food Shopping\",\n  //     time: \"08 Mar 2022 5:15 PM\",\n  //     color: \"blue\",\n  //   },\n  //   {\n  //     id: 2,\n  //     name: \"Wash clothes\",\n  //     time: \"23 Jul 2021 9:00 AM\",\n  //     color: \"pink\",\n  //   },\n  //   {\n  //     id: 3,\n  //     name: \"Exercise\",\n  //     time: \"26 Nov 2021 6:30 PM\",\n  //     color: \"yellow\",\n  //   },\n  // ]\n\n  // !!! show add task form\n  const [showAddTaskForm, setShowAddTaskForm] = useState(false);\n\n  // !!! show edit task form\n  const [showEditTaskForm, setShowEditTaskForm] = useState(false);\n\n  // !!! get tasks from localStorage\n  const [tasks, setTasks] = useLocalStorage(\"saveTasks\", []);\n\n  // !!! set clickedTask\n  const [clickedTask, setClickedTask] = useState(\"\");\n\n  // !!! save task\n  const saveTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n\n    const newTask = { id, ...task };\n\n    const newTasks = [newTask, ...tasks];\n\n    setTasks(newTasks);\n\n    // *** close the form\n    // setShowAddTaskForm(!showAddTaskForm);\n  };\n\n  // !!! delete task\n  const deleteTask = (id) => {\n    const newTasks = tasks.filter((task) => task.id !== id);\n\n    setTasks(newTasks);\n  };\n\n  // !!! edit task\n  const editTask = (id) => {\n    // console.log(id);\n    const thisTask = tasks.find((task) => task.id === id);\n    // console.log(thisTask);\n    setClickedTask(thisTask);\n\n    // *** open the EditTaskForm\n    setShowEditTaskForm(!showEditTaskForm);\n  };\n\n  // !!! save edit task\n  const saveEditTask = (task) => {\n    // *** get edited task's index\n    const editTaskIndex = tasks.findIndex((t) => t.id === task.id);\n\n    // *** update edited task in the tasks array\n    tasks[editTaskIndex] = task;\n    // console.log(tasks);\n\n    // *** use spread operator to copy tasks, it produce a new tasks.\n    // *** In this way, then setTasks/useLocalStorage will save this updated tasks into localStorage. (If we didn't make a new copy, localStorage won't be updated.)\n    const newTasks = [...tasks];\n\n    setTasks(newTasks);\n\n    // *** close the EditTaskForm\n    setShowEditTaskForm(!showEditTaskForm);\n  };\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTaskForm(!showAddTaskForm)} />\n      {showAddTaskForm && (\n        <AddTaskForm\n          //*** close AddTaskForm\n          onAdd={() => setShowAddTaskForm(!showAddTaskForm)}\n          saveTask={saveTask}\n        />\n      )}\n      {showEditTaskForm && (\n        <EditTaskForm\n          //*** close EditTaskForm\n          onEdit={() => setShowEditTaskForm(!showEditTaskForm)}\n          clickedTask={clickedTask}\n          saveEditTask={saveEditTask}\n        />\n      )}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} deleteTask={deleteTask} editTask={editTask} />\n      ) : (\n        <p>\n          <em>Well done.</em>\n          <br />\n          There are no more tasks to be completed.\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}