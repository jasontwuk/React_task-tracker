{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTaskForm.js","App.js","index.js"],"names":["Button","text","onClick","className","defaultProps","Header","onAdd","Task","task","deleteTask","color","name","id","time","Tasks","tasks","map","AddTaskForm","saveTask","useState","setName","setTime","setColor","successMsg","setSuccessMsg","useEffect","document","getElementById","focus","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","App","setTasks","a","fetchTasks","tasksFromServer","displayTasks","fetch","res","json","data","showAddTaskForm","setShowAddTaskForm","Math","floor","random","newTask","length","filter","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1f9a8edd.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\n\nconst Button = ({ text, onClick }) => {\n  return (\n    <button className=\"btn\" onClick={onClick}>\n      {text}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  text: \"Button\",\n};\n\nButton.propTypes = {\n  text: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import Button from \"./Button\";\n\nconst Header = ({ onAdd }) => {\n  return (\n    <header className=\"header\">\n      <h1>Task Tracker</h1>\n      <Button text=\"Add\" onClick={onAdd} />\n    </header>\n  );\n};\n\nexport default Header;\n","import { FaTimes } from \"react-icons/fa\";\n\nconst Task = ({ task, deleteTask }) => {\n  return (\n    <div className={`task ` + task.color}>\n      <h3>\n        {task.name}\n        <FaTimes onClick={() => deleteTask(task.id)} />\n      </h3>\n      <span>{task.time}</span>\n    </div>\n  );\n};\n\nexport default Task;\n","import Task from \"./Task\";\n\nconst Tasks = ({ tasks, deleteTask }) => {\n  return (\n    <>\n      {tasks.map((task) => (\n        <Task key={task.id} task={task} deleteTask={deleteTask} />\n      ))}\n    </>\n  );\n};\n\nexport default Tasks;\n","import { useEffect, useState } from \"react\";\nimport { FaTimes } from \"react-icons/fa\";\n\nconst AddTaskForm = ({ onAdd, saveTask }) => {\n  const [name, setName] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const [color, setColor] = useState(\"blue\");\n  const [successMsg, setSuccessMsg] = useState(false);\n\n  useEffect(() => {\n    // !!! focus on #input-task when component loaded\n    const inputTask = document.getElementById(\"input-task\");\n\n    inputTask.focus();\n  }, []);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    // *** check if the task is empty\n    if (!name) {\n      alert(\"Please add a task.\");\n      return;\n    }\n\n    saveTask({ name, time, color });\n\n    // *** clear the form\n    setName(\"\");\n    setTime(\"\");\n    setColor(\"blue\");\n\n    // *** show success message\n    setSuccessMsg(true);\n  };\n\n  return (\n    <div className=\"form-container\">\n      <FaTimes onClick={onAdd} />\n\n      <form onSubmit={onSubmit}>\n        <div className=\"form-input\">\n          <label>Task</label>\n          <input\n            type=\"text\"\n            placeholder=\"Add Task\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            id=\"input-task\"\n          />\n        </div>\n\n        <div className=\"form-input\">\n          <label>Time</label>\n          <input\n            type=\"text\"\n            placeholder=\"Add Day & Time\"\n            value={time}\n            onChange={(e) => setTime(e.target.value)}\n          />\n        </div>\n\n        <div className=\"form-input\">\n          <label>Colour</label>\n          <div className=\"radio-container\">\n            <input\n              type=\"radio\"\n              value=\"blue\"\n              name=\"colour\"\n              checked={color === \"blue\"}\n              onChange={() => setColor(\"blue\")}\n            />\n            <span className=\"radio-blue\">Blue</span>\n            <input\n              type=\"radio\"\n              value=\"pink\"\n              name=\"colour\"\n              checked={color === \"pink\"}\n              onChange={() => setColor(\"pink\")}\n            />\n            <span className=\"radio-pink\">Pink</span>\n            <input\n              type=\"radio\"\n              value=\"yellow\"\n              name=\"colour\"\n              checked={color === \"yellow\"}\n              onChange={() => setColor(\"yellow\")}\n            />\n            <span className=\"radio-yellow\">Yellow</span>\n            <input\n              type=\"radio\"\n              value=\"green\"\n              name=\"colour\"\n              checked={color === \"green\"}\n              onChange={() => setColor(\"green\")}\n            />\n            <span className=\"radio-green\">Green</span>\n            <input\n              type=\"radio\"\n              value=\"purple\"\n              name=\"colour\"\n              checked={color === \"purple\"}\n              onChange={() => setColor(\"purple\")}\n            />\n            <span className=\"radio-purple\">Purple</span>\n          </div>\n        </div>\n\n        <input type=\"submit\" value=\"Save Task\" />\n\n        {successMsg && (\n          <p>\n            <em>Task added.</em>\n            <br />\n            Please add another one or close this window to go back to your task\n            list.\n          </p>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default AddTaskForm;\n","import Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport \"./App.scss\";\nimport { useState, useEffect } from \"react\";\nimport AddTaskForm from \"./components/AddTaskForm\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  // !!! display tasks\n  useEffect(() => {\n    const displayTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    displayTasks();\n  }, []);\n\n  // !!! fetch tasks from server\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:5000/tasks\");\n    const data = await res.json();\n\n    return data;\n  };\n\n  // !!! save task\n  const saveTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n\n    const newTask = { id, ...task };\n\n    setTasks([newTask, ...tasks]);\n\n    // *** close the form\n    // setShowAddTaskForm(!showAddTaskForm);\n  };\n\n  // !!! delete task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  // !!! show add task form\n  const [showAddTaskForm, setShowAddTaskForm] = useState(false);\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTaskForm(!showAddTaskForm)} />\n      {showAddTaskForm && (\n        <AddTaskForm\n          onAdd={() => setShowAddTaskForm(!showAddTaskForm)}\n          saveTask={saveTask}\n        />\n      )}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} deleteTask={deleteTask} />\n      ) : (\n        <p>\n          <em>Well done.</em>\n          <br />\n          There are no more tasks to be completed.\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}