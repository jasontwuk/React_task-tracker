{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTaskForm.js","components/EditTaskForm.js","components/useLocalStorage.js","App.js","index.js"],"names":["Button","text","onClick","className","defaultProps","Header","onAdd","Task","task","deleteTask","editTask","color","name","id","time","Tasks","tasks","transition","useTransition","from","opacity","marginLeft","marginRight","enter","leave","config","duration","map","item","key","props","div","style","AddTaskForm","saveTask","useState","setName","Date","startDate","setStartDate","setColor","useEffect","document","getElementById","focus","onSubmit","e","preventDefault","value","alert","type","placeholder","onChange","target","selected","date","showTimeSelect","timeFormat","timeIntervals","timeCaption","dateFormat","checked","EditTaskForm","onEdit","saveEditTask","clickedTask","useLocalStorage","initialValue","JSON","parse","localStorage","getItem","Function","getSavedValue","setValue","setItem","stringify","App","showAddTaskForm","setShowAddTaskForm","showEditTaskForm","setShowEditTaskForm","setTasks","setClickedTask","Math","floor","random","newTasks","editTaskIndex","findIndex","t","filter","thisTask","find","length","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1b1b2ca2.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\n\nconst Button = ({ text, onClick }) => {\n  return (\n    <button className=\"btn\" onClick={onClick}>\n      {text}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  text: \"Button\",\n};\n\nButton.propTypes = {\n  text: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import Button from \"./Button\";\n\nconst Header = ({ onAdd }) => {\n  return (\n    <header className=\"header\">\n      <h1>Task Tracker</h1>\n      <Button text=\"Add\" onClick={onAdd} />\n    </header>\n  );\n};\n\nexport default Header;\n","import { FaTimes } from \"react-icons/fa\";\nimport { HiPencilAlt } from \"react-icons/hi\";\n\nconst Task = ({ task, deleteTask, editTask }) => {\n  return (\n    <div className={`task ` + task.color}>\n      <h3>\n        {task.name}\n        <FaTimes onClick={() => deleteTask(task.id)} />\n      </h3>\n      <span>\n        {task.time}\n        <HiPencilAlt onClick={() => editTask(task.id)} />\n      </span>\n    </div>\n  );\n};\n\nexport default Task;\n","import Task from \"./Task\";\nimport { useTransition, animated } from \"react-spring\";\n\nconst Tasks = ({ tasks, deleteTask, editTask }) => {\n  const transition = useTransition(tasks, (task) => task.id, {\n    from: { opacity: 0, marginLeft: -200, marginRight: 200 },\n    enter: { opacity: 1, marginLeft: 0, marginRight: 0 },\n    leave: { opacity: 0, marginLeft: 300, marginRight: -300 },\n    config: { duration: 250 },\n  });\n\n  return (\n    <>\n      {transition.map(({ item, key, props }) => (\n        <animated.div key={key} style={props} className=\"task-container\">\n          <Task task={item} deleteTask={deleteTask} editTask={editTask} />\n        </animated.div>\n      ))}\n    </>\n  );\n};\n\nexport default Tasks;\n","import { useEffect, useState } from \"react\";\nimport { FaTimes } from \"react-icons/fa\";\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst AddTaskForm = ({ onAdd, saveTask }) => {\n  const [name, setName] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [color, setColor] = useState(\"blue\");\n\n  useEffect(() => {\n    // !!! focus on #input-task when component loaded\n    const inputTask = document.getElementById(\"input-task\");\n\n    inputTask.focus();\n  }, []);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    // *** check if the task is empty\n    if (!name) {\n      alert(\"Please enter a task name.\");\n      return;\n    }\n\n    // *** get #date-picker's input value, then set it to \"time\" property\n    const datePicker = document.getElementById(\"date-picker\");\n    const time = datePicker.value;\n\n    // *** call saveTask\n    saveTask({ name, time, color });\n\n    // *** clear the form\n    setName(\"\");\n    setColor(\"blue\");\n  };\n\n  return (\n    <div className=\"form-container\">\n      <div className=\"title-container\">\n        <h3>Add Task</h3>\n      </div>\n\n      <FaTimes onClick={onAdd} />\n\n      <form onSubmit={onSubmit}>\n        <div className=\"form-input\">\n          <label>Name</label>\n          <input\n            type=\"text\"\n            placeholder=\"Enter Task Name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            id=\"input-task\"\n          />\n        </div>\n\n        <div className=\"form-input\">\n          <label>Time</label>\n          <DatePicker\n            selected={startDate}\n            onChange={(date) => setStartDate(date)}\n            showTimeSelect\n            timeFormat=\"HH:mm\"\n            timeIntervals={15}\n            timeCaption=\"time\"\n            dateFormat=\"d MMM yyyy h:mm aa\"\n            id=\"date-picker\"\n          />\n        </div>\n\n        <div className=\"form-input\">\n          <label>Colour</label>\n          <div className=\"radio-container\">\n            <input\n              type=\"radio\"\n              value=\"blue\"\n              name=\"colour\"\n              checked={color === \"blue\"}\n              onChange={() => setColor(\"blue\")}\n            />\n            <span className=\"radio-blue\">Blue</span>\n            <input\n              type=\"radio\"\n              value=\"pink\"\n              name=\"colour\"\n              checked={color === \"pink\"}\n              onChange={() => setColor(\"pink\")}\n            />\n            <span className=\"radio-pink\">Pink</span>\n            <input\n              type=\"radio\"\n              value=\"yellow\"\n              name=\"colour\"\n              checked={color === \"yellow\"}\n              onChange={() => setColor(\"yellow\")}\n            />\n            <span className=\"radio-yellow\">Yellow</span>\n            <input\n              type=\"radio\"\n              value=\"green\"\n              name=\"colour\"\n              checked={color === \"green\"}\n              onChange={() => setColor(\"green\")}\n            />\n            <span className=\"radio-green\">Green</span>\n            <input\n              type=\"radio\"\n              value=\"purple\"\n              name=\"colour\"\n              checked={color === \"purple\"}\n              onChange={() => setColor(\"purple\")}\n            />\n            <span className=\"radio-purple\">Purple</span>\n          </div>\n        </div>\n\n        <input type=\"submit\" value=\"Save\" />\n      </form>\n    </div>\n  );\n};\n\nexport default AddTaskForm;\n","import { useEffect, useState } from \"react\";\nimport { FaTimes } from \"react-icons/fa\";\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst EditTaskForm = ({ onEdit, saveEditTask, clickedTask }) => {\n  const id = clickedTask.id;\n  const [name, setName] = useState(clickedTask.name);\n  const [startDate, setStartDate] = useState(new Date(clickedTask.time));\n  const [color, setColor] = useState(clickedTask.color);\n\n  useEffect(() => {\n    // !!! focus on #input-task when component loaded\n    const inputTask = document.getElementById(\"input-task\");\n\n    inputTask.focus();\n  }, []);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    // *** check if the task is empty\n    if (!name) {\n      alert(\"Please enter a task name.\");\n      return;\n    }\n\n    // *** get #date-picker's input value, then set it to \"time\" property\n    const datePicker = document.getElementById(\"date-picker\");\n    const time = datePicker.value;\n\n    // *** call saveEditTask\n    saveEditTask({ id, name, time, color });\n  };\n\n  return (\n    <div className=\"form-container\">\n      <div className=\"title-container\">\n        <h3>Edit Task</h3>\n      </div>\n\n      <FaTimes onClick={onEdit} />\n\n      <form onSubmit={onSubmit}>\n        <div className=\"form-input\">\n          <label>Name</label>\n          <input\n            type=\"text\"\n            placeholder=\"Enter Task Name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            id=\"input-task\"\n          />\n        </div>\n\n        <div className=\"form-input\">\n          <label>Time</label>\n          <DatePicker\n            selected={startDate}\n            onChange={(date) => setStartDate(date)}\n            showTimeSelect\n            timeFormat=\"HH:mm\"\n            timeIntervals={15}\n            timeCaption=\"time\"\n            dateFormat=\"d MMM yyyy h:mm aa\"\n            id=\"date-picker\"\n          />\n        </div>\n\n        <div className=\"form-input\">\n          <label>Colour</label>\n          <div className=\"radio-container\">\n            <input\n              type=\"radio\"\n              value=\"blue\"\n              name=\"colour\"\n              checked={color === \"blue\"}\n              onChange={() => setColor(\"blue\")}\n            />\n            <span className=\"radio-blue\">Blue</span>\n            <input\n              type=\"radio\"\n              value=\"pink\"\n              name=\"colour\"\n              checked={color === \"pink\"}\n              onChange={() => setColor(\"pink\")}\n            />\n            <span className=\"radio-pink\">Pink</span>\n            <input\n              type=\"radio\"\n              value=\"yellow\"\n              name=\"colour\"\n              checked={color === \"yellow\"}\n              onChange={() => setColor(\"yellow\")}\n            />\n            <span className=\"radio-yellow\">Yellow</span>\n            <input\n              type=\"radio\"\n              value=\"green\"\n              name=\"colour\"\n              checked={color === \"green\"}\n              onChange={() => setColor(\"green\")}\n            />\n            <span className=\"radio-green\">Green</span>\n            <input\n              type=\"radio\"\n              value=\"purple\"\n              name=\"colour\"\n              checked={color === \"purple\"}\n              onChange={() => setColor(\"purple\")}\n            />\n            <span className=\"radio-purple\">Purple</span>\n          </div>\n        </div>\n\n        <input type=\"submit\" value=\"Save\" />\n      </form>\n    </div>\n  );\n};\n\nexport default EditTaskForm;\n","import { useState, useEffect } from \"react\";\n\nfunction getSavedValue(key, initialValue) {\n  const savedValue = JSON.parse(localStorage.getItem(key));\n\n  // *** if savedValue is not empty, return savedValue\n  if (savedValue) {\n    return savedValue;\n  }\n\n  // *** if savedValue is a function, then call that fucntion\n  if (initialValue instanceof Function) {\n    return initialValue();\n  }\n\n  // *** if not the above situations...\n  return initialValue;\n}\n\nconst useLocalStorage = (key, initialValue) => {\n  const [value, setValue] = useState(() => {\n    return getSavedValue(key, initialValue);\n  });\n\n  // *** when \"value\" is changed, use useEffect to store \"value\" to localStorage\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [value]);\n\n  return [value, setValue];\n};\n\nexport default useLocalStorage;\n","import { useState } from \"react\";\n\nimport \"./App.scss\";\n\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTaskForm from \"./components/AddTaskForm\";\nimport EditTaskForm from \"./components/EditTaskForm\";\nimport useLocalStorage from \"./components/useLocalStorage\";\n\nfunction App() {\n  // !!! show add task form\n  const [showAddTaskForm, setShowAddTaskForm] = useState(false);\n\n  // !!! show edit task form\n  const [showEditTaskForm, setShowEditTaskForm] = useState(false);\n\n  // !!! get tasks from localStorage\n  const [tasks, setTasks] = useLocalStorage(\"saveTasks\", []);\n\n  // !!! set clickedTask\n  const [clickedTask, setClickedTask] = useState(\"\");\n\n  // !!! save task\n  const saveTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n\n    const newTask = { id, ...task };\n\n    const newTasks = [newTask, ...tasks];\n\n    setTasks(newTasks);\n\n    // *** close the form\n    setShowAddTaskForm(!showAddTaskForm);\n  };\n\n  // !!! delete task\n  const deleteTask = (id) => {\n    const newTasks = tasks.filter((task) => task.id !== id);\n\n    setTasks(newTasks);\n  };\n\n  // !!! edit task\n  const editTask = (id) => {\n    // console.log(id);\n    const thisTask = tasks.find((task) => task.id === id);\n    // console.log(thisTask);\n    setClickedTask(thisTask);\n\n    // *** open the EditTaskForm\n    setShowEditTaskForm(!showEditTaskForm);\n  };\n\n  // !!! save edit task\n  const saveEditTask = (task) => {\n    // *** get edited task's index\n    const editTaskIndex = tasks.findIndex((t) => t.id === task.id);\n\n    // *** update edited task in the tasks array\n    tasks[editTaskIndex] = task;\n    // console.log(tasks);\n\n    // *** use spread operator to copy tasks, it produce a new tasks.\n    // *** In this way, then setTasks/useLocalStorage will save this updated tasks into localStorage. (If we didn't make a new copy, localStorage won't be updated.)\n    const newTasks = [...tasks];\n\n    setTasks(newTasks);\n\n    // *** close the EditTaskForm\n    setShowEditTaskForm(!showEditTaskForm);\n  };\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTaskForm(!showAddTaskForm)} />\n      {showAddTaskForm && (\n        <AddTaskForm\n          //*** close AddTaskForm\n          onAdd={() => setShowAddTaskForm(!showAddTaskForm)}\n          saveTask={saveTask}\n        />\n      )}\n      {showEditTaskForm && (\n        <EditTaskForm\n          //*** close EditTaskForm\n          onEdit={() => setShowEditTaskForm(!showEditTaskForm)}\n          clickedTask={clickedTask}\n          saveEditTask={saveEditTask}\n        />\n      )}\n\n      <Tasks tasks={tasks} deleteTask={deleteTask} editTask={editTask} />\n\n      {tasks.length <= 0 && (\n        <p>\n          <em>Well done.</em>\n          <br />\n          There are no more tasks to be completed.\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n// [\n//   {\n//     id: 1,\n//     name: \"Food Shopping\",\n//     time: \"08 Mar 2022 5:15 PM\",\n//     color: \"blue\",\n//   },\n//   {\n//     id: 2,\n//     name: \"Wash clothes\",\n//     time: \"23 Jul 2021 9:00 AM\",\n//     color: \"pink\",\n//   },\n//   {\n//     id: 3,\n//     name: \"Exercise\",\n//     time: \"26 Nov 2021 6:30 PM\",\n//     color: \"yellow\",\n//   },\n// ]\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}